// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`460014000b06060606060606060606060606060606060606060606060a1111111111111111111111111111111111111111111111121212121212121212121212121212121212121212120d0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e081111111111111114111111111111111111111111111111121212121212121212121212121212121212121212120d0e0f100f100f100f100f100f100f100f100f100f100f0e081111111111111111111111111111111111111111111111121212121212121212121212121212121212121212120d0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e081111111111111111111111111111111111111111111111121212121212121212121212121212121212121212120cb06060606060606060606060606060606060606060606060a1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110d0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e081111111111111111111111111111111111111111111111121212121212121212121212121212121212121212120d0e0f100f100f100f100f100f100f100f100f100f100f0e081111111114111111111111111111111111111111111411121212121212121212121212121212121212121212120d0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e081111111111111111111111111111111111111111111111121212121212121212121212121212121212121212120c070707070707070707070707070707070707070707070709111111111111111111111111111111111111111111111112121212121212121212121212121212121212121212`, img`
.22222222222222222222222........................2222222222222222222222
................................................2222222222222222222222
................................................2222222222222222222222
................................................2222222222222222222222
.22222222222222222222222........................2222222222222222222222
2......2.....2....2.....2.............................................
2......2.....2....2.....2.............................................
2......2.....2....2.....2.............................................
2......2..........2.....2.............................................
2.......................2.............................................
2............2..........2.............................................
2......2.....2....2.....2.............................................
2......2.....2....2.....2.............................................
2......2.....2....2...................................................
2......2.....2....2...................................................
.22222222222222222222222........................2222222222222222222222
................................................2222222222222222222222
................................................2222222222222222222222
................................................2222222222222222222222
.22222222222222222222222........................2222222222222222222222
`, [myTiles.transparency16,sprites.castle.tileDarkGrass1,sprites.castle.tileDarkGrass2,sprites.castle.tileDarkGrass3,sprites.builtin.brick,sprites.castle.tilePath5,sprites.dungeon.greenOuterEast0,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterNorth0,sprites.dungeon.floorMixed,sprites.dungeon.floorLight2,sprites.dungeon.floorDark2,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile5], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile3":
            case "tile5":return tile5;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
